package krustyKookies;

import java.awt.FlowLayout;
import java.awt.GridLayout;

import javax.swing.BoxLayout;
import javax.swing.DefaultListModel;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;

import krustyKookies.BookingPane.DateSelectionListener;
import krustyKookies.BookingPane.NameSelectionListener;

public class PalletSearchPane extends BasicPane{
	private static final long serialVersionUID = 1;
	private JLabel currentUser;
	private DefaultListModel<String> cookieListModel;
	private JList<String> cookieList;
	private DefaultListModel<String> idListModel;
	private JList<String> idList;
	private JTextField[] fields;
	
	private static final int ID = 0;
	private static final int COOKIETYPE = 1;
	private static final int LOCATION = 2;
	private static final int DATE = 3;
	private static final int TIME = 4;
	private static final int NBR_FIELDS = 5;
	
	private static final int BDATE = 0;
	private static final int EDATE = 1;
	private static final int DATE_NBR_FIELDS = 2;
	
	public PalletSearchPane(Database db){
		super(db);
	}
	
	public JComponent createLeftPanel() {
		cookieListModel = new DefaultListModel<String>();

		cookieList = new JList<String>(cookieListModel);
		cookieList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		cookieList.setPrototypeCellValue("123456789012");
		cookieList.addListSelectionListener(new CookieSelectionListener());
		JScrollPane p1 = new JScrollPane(cookieList);

		idListModel = new DefaultListModel<String>();

		idList = new JList<String>(idListModel);
		idList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		idList.setPrototypeCellValue("123456789012");
		idList.addListSelectionListener(new IdSelectionListener());
		JScrollPane p2 = new JScrollPane(idList);

		JPanel p = new JPanel();
		p.setLayout(new GridLayout(1, 2));
		p.add(p1);
		p.add(p2);
		return p;
	}
	
	public JComponent createTopPanel(){
		String[] texts = new String[DATE_NBR_FIELDS];
		texts[BDATE] = "Starting date";
		texts[EDATE] = "Ending date";
		
		fields = new JTextField[NBR_FIELDS];
		for (int i = 0; i < fields.length; i++) {
			fields[i] = new JTextField(20);
			fields[i].setEditable(true);
		}
		
		JPanel input = new InputPanel(texts, fields);
		
		JPanel p1 = new JPanel();
		p1.setLayout(new FlowLayout(FlowLayout.LEFT));
		p1.add(new JLabel("Current user: "));
		currentUser = new JLabel("");
		p1.add(currentUser);

		JPanel p = new JPanel();
		p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
		p.add(p1);
		p.add(input);
		return p;
	}
}
